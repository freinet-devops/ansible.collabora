#!/bin/bash
# DESC: create self signed cert for nginx

export PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin
umask 077

# cert fqdn
HOST="{{collabora_nginx_ssl_cert_host}}"
# cert root dir
BASE_DIR="/etc/MySsl/$HOST"
# certificate details
CA_SUBJ='/C=XX/O=LAB-CA/CN=LabAuthority'
CERT_SUBJ='/C=XX/ST=XX/L=City/O=Lab'
# cert validity days
DAYS="{{collabora_nginx_ssl_cert_days}}"
# ca keylen
CA_KEYLEN=4096
# cert keylen
PRIV_KEYLEN=2048

KEY_COPY="{{collabora_nginx_ssl_cert_key}}"
CERT_COPY="{{collabora_nginx_ssl_cert_crt}}"
CA_CHAIN_COPY="{{collabora_nginx_ssl_cert_chain}}"
COPY_OWNER="root:nginx"

mkdir -p ${BASE_DIR}/{ca,servers,tmp}
cd "${BASE_DIR}" || exit 1
if [ -f "ca/root.key.pem" ]
then
   echo "------ Skip creation of ca/root.key.pem, it is already present"
else
   echo "------ create root key"
   openssl genrsa -out "ca/root.key.pem" $CA_KEYLEN
fi
if [ -f "ca/root.crt.pem" ]
then
   echo "------ Skip creation of ca/root.crt.pem, it is already present"
else
   echo "------ create intermediate cert"
   openssl req -x509 -new -nodes -key "ca/root.key.pem" -days $DAYS -out "ca/root.crt.pem" -subj "$CA_SUBJ"
fi
if [ -f "servers/${HOST}_privkey.pem" ]
then
   echo "------ ERROR: servers/${HOST}_privkey.pem this file should not exist, remove this files first:"
   ls -l servers/${HOST}_*
else
   echo "------ create server private key"
   openssl genrsa -out "servers/${HOST}_privkey.pem" $PRIV_KEYLEN -key "servers/${HOST}_privkey.pem"
   echo "------ create server csr"
   openssl req -key "servers/${HOST}_privkey.pem" -new -sha256 -out "tmp/${HOST}.csr.pem" -subj "$CERT_SUBJ/CN=${HOST}"
   echo "sign csr"
   openssl x509 -req -in "tmp/${HOST}.csr.pem" -CA "ca/root.crt.pem" -CAkey "ca/root.key.pem" -CAcreateserial -out "servers/${HOST}_cert.pem" -days $DAYS
   echo "------ prepare cert chain"
   cat "ca/root.crt.pem" > "servers/${HOST}_ca_chain.pem"
   echo " ------ SHOW RESULTS"
   find "$BASE_DIR"
   echo "------ copy cert in place"
   cp -v "servers/${HOST}_privkey.pem" "$KEY_COPY" ; chmod 640 "$KEY_COPY"
   cp -v "servers/${HOST}_cert.pem" "$CERT_COPY" ; chmod 644 "$CERT_COPY" 
   cp -v "servers/${HOST}_ca_chain.pem" "$CA_CHAIN_COPY" ; chmod 644 "$CA_CHAIN_COPY"
   chown $COPY_OWNER "$KEY_COPY" "$CERT_COPY" "$CA_CHAIN_COPY"
   echo "--- done"
fi

